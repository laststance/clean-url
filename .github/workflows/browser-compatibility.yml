name: Browser Compatibility

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run browser compatibility tests weekly
    - cron: '0 3 * * 0'

jobs:
  e2e-chrome:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Install Playwright browsers
      run: pnpm install:playwright

    - name: Prepare WXT environment
      run: pnpm prepare

    - name: Build extension for Chrome
      run: pnpm build

    - name: Run E2E tests on Chrome
      run: pnpm test:e2e
      env:
        EXTENSION_PATH: .output/chrome-mv3

  e2e-firefox:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Install Playwright browsers
      run: pnpm install:playwright

    - name: Prepare WXT environment
      run: pnpm prepare

    - name: Build extension for Firefox
      run: pnpm build:firefox

    - name: Run E2E tests on Firefox
      run: pnpm test:e2e
      env:
        EXTENSION_PATH: .output/firefox-mv2

  extension-validation:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        browser: [chrome, firefox]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Prepare WXT environment
      run: pnpm prepare

    - name: Build extension for ${{ matrix.browser }}
      run: |
        if [ "${{ matrix.browser }}" = "firefox" ]; then
          pnpm build:firefox
        else
          pnpm build
        fi

    - name: Validate manifest for ${{ matrix.browser }}
      run: |
        if [ "${{ matrix.browser }}" = "firefox" ]; then
          manifest=".output/firefox-mv2/manifest.json"
        else
          manifest=".output/chrome-mv3/manifest.json"
        fi

        # Check if manifest exists
        if [ ! -f "$manifest" ]; then
          echo "❌ Manifest not found at $manifest"
          exit 1
        fi

        # Validate JSON syntax
        if ! jq empty "$manifest" 2>/dev/null; then
          echo "❌ Invalid JSON in manifest"
          exit 1
        fi

        echo "✅ Manifest validation passed for ${{ matrix.browser }}"

    - name: Check extension size
      run: |
        if [ "${{ matrix.browser }}" = "firefox" ]; then
          ext_dir=".output/firefox-mv2"
        else
          ext_dir=".output/chrome-mv3"
        fi

        size=$(du -sb "$ext_dir" | cut -f1)
        max_size=$((50 * 1024 * 1024)) # 50MB limit

        echo "Extension size: $size bytes"

        if [ "$size" -gt "$max_size" ]; then
          echo "❌ Extension size ($size bytes) exceeds limit ($max_size bytes)"
          exit 1
        fi

        echo "✅ Extension size is within limits for ${{ matrix.browser }}"
