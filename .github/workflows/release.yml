name: Release

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode (no actual publishing)'
        required: false
        default: true
        type: boolean

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Build for Chrome
      run: pnpm build

    - name: Build for Firefox
      run: pnpm build:firefox

    - name: Create Chrome ZIP
      run: pnpm zip

    - name: Create Firefox ZIP
      run: pnpm zip:firefox

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: extension-packages
        path: .output/*.zip
        retention-days: 90

  publish-chrome:
    runs-on: ubuntu-latest
    needs: build-and-package
    if: github.event_name == 'push' || github.event.inputs.dry_run == 'false'
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: extension-packages
        path: .output/

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Setup Chrome Web Store credentials
      run: |
        echo "CHROME_CLIENT_ID=${{ secrets.CHROME_CLIENT_ID }}" >> .env.submit
        echo "CHROME_CLIENT_SECRET=${{ secrets.CHROME_CLIENT_SECRET }}" >> .env.submit
        echo "CHROME_REFRESH_TOKEN=${{ secrets.CHROME_REFRESH_TOKEN }}" >> .env.submit

    - name: Submit to Chrome Web Store
      run: |
        if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
          echo "Running in dry-run mode for Chrome Web Store"
          pnpm wxt submit --dry-run --chrome-zip .output/clean-url-*-chrome.zip
        else
          echo "Publishing to Chrome Web Store"
          pnpm wxt submit --chrome-zip .output/clean-url-*-chrome.zip
        fi

  publish-firefox:
    runs-on: ubuntu-latest
    needs: build-and-package
    if: github.event_name == 'push' || github.event.inputs.dry_run == 'false'
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: extension-packages
        path: .output/

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Setup Firefox Add-ons credentials
      run: |
        echo "FIREFOX_JWT_ISSUER=${{ secrets.FIREFOX_JWT_ISSUER }}" >> .env.submit
        echo "FIREFOX_JWT_SECRET=${{ secrets.FIREFOX_JWT_SECRET }}" >> .env.submit

    - name: Submit to Firefox Add-ons
      run: |
        if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
          echo "Running in dry-run mode for Firefox Add-ons"
          pnpm wxt submit --dry-run --firefox-zip .output/clean-url-*-firefox.zip
        else
          echo "Publishing to Firefox Add-ons"
          pnpm wxt submit --firefox-zip .output/clean-url-*-firefox.zip
        fi

  publish-edge:
    runs-on: ubuntu-latest
    needs: build-and-package
    if: github.event_name == 'push' || github.event.inputs.dry_run == 'false'
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: extension-packages
        path: .output/

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Setup Edge Addons credentials
      run: |
        echo "EDGE_CLIENT_ID=${{ secrets.EDGE_CLIENT_ID }}" >> .env.submit
        echo "EDGE_CLIENT_SECRET=${{ secrets.EDGE_CLIENT_SECRET }}" >> .env.submit
        echo "EDGE_ACCESS_TOKEN_URL=${{ secrets.EDGE_ACCESS_TOKEN_URL }}" >> .env.submit

    - name: Submit to Edge Addons
      run: |
        if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
          echo "Running in dry-run mode for Edge Addons"
          pnpm wxt submit --dry-run --edge-zip .output/clean-url-*-chrome.zip
        else
          echo "Publishing to Edge Addons"
          pnpm wxt submit --edge-zip .output/clean-url-*-chrome.zip
        fi

  notify:
    runs-on: ubuntu-latest
    needs: [publish-chrome, publish-firefox, publish-edge]
    if: always() && github.event_name == 'push'

    steps:
    - name: Notify success
      if: needs.publish-chrome.result == 'success' || needs.publish-firefox.result == 'success' || needs.publish-edge.result == 'success'
      run: echo "✅ Extension published successfully to stores"

    - name: Notify failure
      if: failure()
      run: echo "❌ Extension publishing failed"
